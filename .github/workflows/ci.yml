name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: capstone_project
          MYSQL_USER: dev
          MYSQL_PASSWORD: dev
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Set up test database
      run: |
        mysql -h localhost -u root -proot -e "CREATE DATABASE IF NOT EXISTS capstone_project_test;"
        mysql -h localhost -u root -proot -e "GRANT ALL PRIVILEGES ON capstone_project_test.* TO 'dev'@'%';"
        mysql -h localhost -u root -proot -e "FLUSH PRIVILEGES;"

    - name: Run migrations
      run: npm run migrations:dev:up
      env:
        NODE_ENV: development
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USER: dev
        DB_PASSWORD: dev
        DB_NAME: capstone_project
        JWT_SECRET: test-secret
        REDIS_HOST: localhost
        REDIS_PORT: 6379

    - name: Copy schema to test database
      run: |
        mysqldump -h localhost -u root -proot capstone_project | mysql -h localhost -u root -proot capstone_project_test

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USER: dev
        DB_PASSWORD: dev
        DB_NAME: capstone_project_test
        JWT_SECRET: test-secret
        REDIS_HOST: localhost
        REDIS_PORT: 6379

    - name: Build
      run: npm run build 